{
  "headless": false,
  "source": {
    "dirname": "src",
    "overwrite": false,
    "skip_tests": false,
    "print_jsdocs": true,
    "print_markers": true,
    "print_examples": true,
    "use_ioc": true,
    "structure": {
      "controller": "{{root}}/endpoints/{{endpoint}}/domain/{{name}}.controller.ts",
      "controller_unit_test": "{{root}}/endpoints/{{endpoint}}/domain/__tests__/{{name}}.controller.unit.test.ts",
      "data_source": "{{root}}/endpoints/{{endpoint}}/data/data-sources/{{name}}.{{type}}.data-source.ts",
      "data_source_unit_test": "{{root}}/endpoints/{{endpoint}}/data/data-sources/__tests__/{{name}}.{{type}}.data-source.unit.test.ts",
      "dependency_injector": "{{root}}/endpoints/{{endpoint}}/ioc/{{name}}.ioc.ts",
      "root_dependency_injector": "{{root}}/ioc/ioc.ts",
      "endpoint": "{{root}}/endpoints/{{endpoint}}",
      "entity": "{{root}}/endpoints/{{endpoint}}/domain/entities/{{name}}.ts",
      "entity_unit_test": "{{root}}/endpoints/{{endpoint}}/domain/entities/__tests__/{{name}}.unit.test.ts",
      "enums": "{{root}}/endpoints/{{endpoint}}/domain/{{name}}.enums.ts",
      "input": "{{root}}/endpoints/{{endpoint}}/domain/models/{{name}}.input.ts",
      "input_unit_test": "{{root}}/endpoints/{{endpoint}}/domain/models/__tests__/{{name}}.input.unit.test.ts",
      "ioc": "{{root}}/endpoints/{{endpoint}}/ioc.config.ts",
      "mapper": "{{root}}/endpoints/{{endpoint}}/data/mappers/{{name}}.{{type}}.mapper.ts",
      "mapper_unit_test": "{{root}}/endpoints/{{endpoint}}/data/mappers/__tests__/{{name}}.{{type}}.mapper.unit.test.ts",
      "model": "{{root}}/endpoints/{{endpoint}}/data/dtos/{{name}}.dto.ts",
      "output": "{{root}}/endpoints/{{endpoint}}/domain/models/{{name}}.output.ts",
      "output_unit_test": "{{root}}/endpoints/{{endpoint}}/domain/models/__tests__/{{name}}.output.unit.test.ts",
      "query_builder": "{{root}}/endpoints/{{endpoint}}/domain/models/{{name}}.query-builder.ts",
      "query_builder_unit_test": "{{root}}/endpoints/{{endpoint}}/domain/models/__tests__/{{name}}.query-builder.unit.test.ts",
      "repository": "{{root}}/endpoints/{{endpoint}}/domain/repositories/{{name}}.repository.ts",
      "repository_factory": "{{root}}/endpoints/{{endpoint}}/data/repositories/{{name}}.repository-factory.ts",
      "repository_factory_unit_test": "{{root}}/endpoints/{{endpoint}}/data/repositories/__tests__/{{name}}.repository-factory.unit.test.ts",
      "repository_impl": "{{root}}/endpoints/{{endpoint}}/data/repositories/{{name}}.repository-impl.ts",
      "repository_impl_unit_test": "{{root}}/endpoints/{{endpoint}}/data/repositories/__tests__/{{name}}.repository-impl.unit.test.ts",
      "route": "{{root}}/endpoints/{{endpoint}}/routes/{{name}}.route.ts",
      "route_unit_test": "{{root}}/endpoints/{{endpoint}}/routes/__tests__/{{name}}.route.unit.test.ts",
      "schemas": "{{root}}/endpoints/{{endpoint}}/schemas/{{name}}.schema.json",
      "service": "{{root}}/endpoints/{{endpoint}}/domain/services/{{name}}.service.ts",
      "service_factory": "{{root}}/endpoints/{{endpoint}}/data/services/{{name}}.service-factory.ts",
      "service_factory_unit_test": "{{root}}/endpoints/{{endpoint}}/data/services/__tests__/{{name}}.service-factory.unit.test.ts",
      "service_impl": "{{root}}/endpoints/{{endpoint}}/data/services/{{name}}.service-impl.ts",
      "service_impl_unit_test": "{{root}}/endpoints/{{endpoint}}/data/services/__tests__/{{name}}.service-impl.unit.test.ts",
      "use_case": "{{root}}/endpoints/{{endpoint}}/domain/use-cases/{{name}}.use-case.ts",
      "use_case_unit_test": "{{root}}/endpoints/{{endpoint}}/domain/use-cases/__tests__/{{name}}.use-case.unit.test.ts",
      "utils": "{{root}}/endpoints/{{endpoint}}/domain/{{name}}.utils.ts",
      "utils_unit_test": "{{root}}/endpoints/{{endpoint}}/domain/__tests__/{{name}}.utils.unit.test.ts"
    },
    "defaults": {
      "model": {
        "mongo": {
          "imports": [
            {
              "list": [
                "MongoDB"
              ],
              "path": "@alien-worlds/storage-mongodb"
            }
          ],
          "props": [
            {
              "name": "_id",
              "type": "MongoDB.ObjectId",
              "import": "mongo",
              "optional": true
            }
          ]
        },
        "json": {
          "imports": [],
          "props": [
            {
              "name": "id",
              "type": "string",
              "optional": true
            }
          ]
        }
      },
      "entity": {
        "imports": [
          {
            "list": [
              "Entity",
              "UnknownObject"
            ],
            "path": "@alien-worlds/api-core"
          }
        ],
        "props": [
          {
            "access": "public",
            "default": "\"\"",
            "name": "id",
            "type": "string",
            "optional": false
          },
          {
            "access": "public",
            "name": "rest",
            "type": "string",
            "optional": true
          }
        ]
      },
      "use_case": {
        "imports": [
          {
            "list": [
              "injectable",
              "inject",
              "UseCase",
              "Result",
              "Failure"
            ],
            "path": "@alien-worlds/api-core"
          }
        ],
        "props": [],
        "injections": []
      },
      "data_source": {
        "mongo": {
          "imports": [
            {
              "list": [
                "MongoDB",
                "CollectionMongoSource",
                "MongoSource"
              ],
              "path": "@alien-worlds/storage-mongodb"
            }
          ],
          "props": [
            {
              "name": "mongoSource",
              "type": "MongoSource",
              "optional": false
            },
            {
              "name": "name",
              "type": "string",
              "optional": false
            }
          ]
        }
      },
      "repository": {
        "imports": [
          {
            "list": [
              "Repository",
              "RepositoryImpl",
              "injectable"
            ],
            "path": "@alien-worlds/api-core"
          }
        ],
        "props": []
      },
      "repository_factory": {
        "mongo": {
          "imports": [
            {
              "list": [
                "MongoCollectionSource",
                "MongoConfig",
                "MongoQueryBuilders",
                "MongoSource"
              ],
              "path": "@alien-worlds/storage-mongodb"
            },
            {
              "list": [
                "RepositoryImpl",
                "Container"
              ],
              "path": "@alien-worlds/api-core"
            }
          ],
          "props": []
        }
      },
      "mapper": {
        "mongo": {
          "imports": [
            {
              "list": [
                "MongoDB",
                "MongoMapper"
              ],
              "path": "@alien-worlds/storage-mongodb"
            }
          ],
          "props": []
        }
      },
      "service": {
        "imports": [
          {
            "list": [
              "injectable"
            ],
            "path": "@alien-worlds/api-core"
          }
        ],
        "props": []
      },
      "service_factory": {
        "imports": [
          {
            "list": [
              "Container"
            ],
            "path": "@alien-worlds/api-core"
          }
        ],
        "props": []
      },
      "controller": {
        "imports": [
          {
            "list": [
              "injectable",
              "inject"
            ],
            "path": "@alien-worlds/api-core"
          }
        ],
        "props": []
      },
      "query_builder": {
        "mongo": {
          "imports": [
            {
              "list": [
                "MongoDB"
              ],
              "path": "@alien-worlds/storage-mongodb"
            },
            {
              "list": [
                "Query",
                "QueryBuilder"
              ],
              "path": "@alien-worlds/api-core"
            }
          ],
          "props": []
        }
      },
      "input": {
        "imports": [
          {
            "list": [
              "Request"
            ],
            "path": "@alien-worlds/api-core"
          }
        ],
        "props": []
      },
      "output": {
        "imports": [
          {
            "list": [
              "UnknownObject",
              "Result",
              "Failure"
            ],
            "path": "@alien-worlds/api-core"
          }
        ],
        "props": [
          {
            "name": "result",
            "type": "Result",
            "optional": false,
            "access": "public",
            "readonly": true
          }
        ]
      },
      "route": {
        "get": {
          "imports": [
            {
              "list": [
                "UnknownObject",
                "GetRoute",
                "RouteHandler"
              ],
              "path": "@alien-worlds/api-core"
            }
          ],
          "props": []
        },
        "post": {
          "imports": [
            {
              "list": [
                "UnknownObject",
                "PostRoute",
                "RouteHandler"
              ],
              "path": "@alien-worlds/api-core"
            }
          ],
          "props": []
        },
        "put": {
          "imports": [
            {
              "list": [
                "UnknownObject",
                "PutRoute",
                "RouteHandler"
              ],
              "path": "@alien-worlds/api-core"
            }
          ],
          "props": []
        },
        "patch": {
          "imports": [
            {
              "list": [
                "UnknownObject",
                "PatchRoute",
                "RouteHandler"
              ],
              "path": "@alien-worlds/api-core"
            }
          ],
          "props": []
        },
        "delete": {
          "imports": [
            {
              "list": [
                "UnknownObject",
                "DeleteRoute",
                "RouteHandler"
              ],
              "path": "@alien-worlds/api-core"
            }
          ],
          "props": []
        }
      },
      "dependency_injector": {
        "imports": [
          {
            "list": [
              "Container",
              "DependencyInjector"
            ],
            "path": "@alien-worlds/api-core"
          }
        ],
        "props": []
      }
    }
  }
}