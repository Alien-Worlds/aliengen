{{! template for action collective data type e.g. src/contracts/dao-worlds/actions/data/dtos/dao-worlds-action.dto.ts }}
{{! template for delta collective data type e.g. src/contracts/dao-worlds/deltas/data/dtos/dao-worlds-action.dto.ts }}
{{> warn-do-not-edit}}
import { MongoDB } from '@alien-worlds/aw-storage-mongodb';

{{#each dtos}}
import { {{pascalCase .}}MongoModel, {{pascalCase .}}RawModel } from './{{.}}{{../suffix}}';
{{/each}}

export type DataDocumentType =
{{#each dtos}}
  | {{pascalCase .}}MongoModel
  {{~#if @last}};{{/if}}
{{/each}}

export type DataRawType =
{{#each dtos}}
  | {{pascalCase .}}RawModel
  {{~#if @last}};{{/if}}
{{/each}}

{{#if (eq actionOrDelta 'action')}}
export type {{pascalCase contract}}ActionMongoModel = {
  _id?: MongoDB.ObjectId;
  block_timestamp?: Date;
  block_number?: MongoDB.Long;
  global_sequence?: MongoDB.Long;
  receiver_sequence?: MongoDB.Long;
  trx_id?: string;
  action_hash?: string;
  action?: {
    account: string;
    name: string;
    data: DataDocumentType;
  };
};

export type {{pascalCase contract}}ActionRawModel = {
  account: string;
  name: string;
  block_timestamp: Date;
  block_number: string;
  global_sequence: string;
  recv_sequence: string;
  transaction_id: string;
  data: DataRawType;
  [key: string]: unknown;
};
{{/if}}

{{#if (eq actionOrDelta 'delta')}}
export type {{pascalCase contract}}DeltaMongoModel = {
  _id?: MongoDB.ObjectId;
  block_number?: MongoDB.Long;
  code?: string;
  scope?: string;
  table?: string;
  data_hash?: string;
  data?: DataDocumentType;
  payer?: string;
  primary_key?: MongoDB.Long,
  present?: boolean;
  block_timestamp?: Date;
};

export type {{pascalCase contract}}DeltaRawModel = {
  block_timestamp: Date;
  block_number: string;
  code: string;
  scope: string;
  table: string;
  payer: string;
  primary_key: string;
  present: boolean;
  data: DataRawType;
};
{{/if}}