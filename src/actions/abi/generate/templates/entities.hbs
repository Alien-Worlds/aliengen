{{! template for action entities e.g. src/contracts/index-worlds/actions/domain/entities/setstatus.dto.ts }}
{{> warn-do-not-edit}}
{{> imports}}
{{#each documents}}
/**
 * Represents a `{{name}}` object.
 *
 * @class
 */
export class {{name}} {
  /**
   * Constructs a new instance of the `{{name}}` class.
   *
   * @public
   * @constructor
   {{#each props}}
   * @param {{{this.type.name}}} {{this.key}}
   {{/each}}
   * @param string [id]
   * @returns `{{name}}` - An instance of the `{{name}}` class.
   */
  public constructor(
{{#each props}}
    public {{this.key}}: {{{this.type.name}}},
{{/each}}
    public id?: string,
  ) {}

  public rest?: object;

  /**
   * Converts the current instance of the `{{name}}` class to a JSON object.
   * 
   * @public
   * @returns {object} The JSON representation of the instance.
   */
  public toJSON(): object {
    return {
      {{#each props}}
      {{this.key}}: this.{{this.key}},
      {{/each}}
    };
  }

  /**
   * Creates an instance of the `{{name}}` class.
   *
   * @static
   * @public
   * @returns `{{name}}` An instance of the `{{name}}` class.
   */
  public static create(
{{#each props}}
    {{this.key}}: {{{this.type.name}}},
{{/each}}
    id?: string,
    rest?: object
  ): {{name}} {
    const entity = new {{name}}(
      {{#each props}}
        {{this.key}},
      {{/each}}
        id
    );
    entity.rest = rest;

    return entity;
  }

  public static getDefault(): {{name}}{
    throw new Error('Method not implemented');
  }
}

{{/each}}