{{! template for action mapper e.g. src/contracts/dao-worlds/actions/data/mappers/dao-worlds-action.mapper.ts }}
{{> warn-do-not-edit}}

import { 
  ContractAction, 
  ContractActionDocument, 
  Mapper, 
} from '@alien-worlds/api-core';

import { DataDocumentType } from '../dtos/{{paramCase contract}}-action.dto';
import { DataEntityType } from '../../domain/entities/{{paramCase contract}}-action';
import { {{pascalCase contract}}ActionName } from '../../domain/enums';
{{#each actions}}
import { {{pascalCase .}}Mapper } from "./{{.}}.mapper";
{{/each}}

export class {{pascalCase contract}}ActionMapper
  implements Mapper<ContractAction<DataEntityType>, ContractActionDocument>
{
  public toEntity(
    mongoModel: ContractActionDocument<DataDocumentType>
  ): ContractAction<DataEntityType, DataDocumentType> {
    switch (mongoModel.action.name) {
      {{#each actions}}
      case {{pascalCase ../contract}}ActionName.{{pascalCase .}}:
        return ContractAction.toEntity(mongoModel, new {{pascalCase .}}Mapper().toEntity);
      {{/each}}
      default:
        return null;
    }
  }

  public fromEntity(
    entity: ContractAction<DataEntityType, DataDocumentType>
  ): ContractActionDocument<DataDocumentType> {
    switch (entity.action.name) {
      {{#each actions}}
      case {{pascalCase ../contract}}ActionName.{{pascalCase .}}:
        return ContractAction.fromEntity(entity, new {{pascalCase .}}Mapper().fromEntity);
      {{/each}}
      default:
        return null;
    }
  }
}
