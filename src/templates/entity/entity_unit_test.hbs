{{render "imports" imports print_markers=print_markers}}

{{#if print_markers}}/*__mock__*/{{/if}}

{{#each models}}
const model = {{this.name}}JsonModel = {
{{#each props}}
  {{> prop this}}
{{/each}}
};
{{#if print_markers}}/*__fixture__*/{{/if}}

describe('{{this.name}} unit tests', () => {
  {{#if print_markers}}/*__stub__*/{{/if}}

  it('{{this.name}}.create should return {{this.name}} object based on the provided data', async () => {
    const entity = {{this.name}}.create(
    {{#each this.props}}
      {{> arg this}}
    {{/each}}
    );

    expect(entity).toBeInstanceOf({{this.name}});
  });

  it('"toJSON" should return a json model based on entity', async () => {
    const entity = {{this.name}}.create(
    {{#each this.props}}
      {{> arg this}}
    {{/each}}
    );

    expect(entity.toJSON()).toEqual(model);
  });

  {{#if print_markers}}/*__unit_test__*/{{/if}}
});
{{/each}}
{{#if print_markers}}/*__group__*/{{/if}}
