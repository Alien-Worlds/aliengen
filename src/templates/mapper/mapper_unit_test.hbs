{{render "imports" imports print_markers=print_markers}}

{{#if print_markers}}/*__mock__*/{{/if}}

{{#each models}}
describe('{{pascal_case name}}{{pascal_case type}}Mapper', () => {
  describe('toEntity', () => {
    it('should convert a {{pascal_case type}} model to a {{pascal_case name}} entity', () => {
      const model: {{pascal_case name}}{{pascal_case type}}Model = {
        {{#each props}}
        {{snake_case this.name}}: {{or this.default "null"}}
        {{/each}}
      };

      const mapper = new {{pascal_case name}}{{pascal_case type}}Mapper();
      const result = mapper.toEntity(model);

      expect(result).toBeInstanceOf({{pascal_case name}});
      /*
      {{#each props}}
      {{this.name}}: {{or this.default "null"}}
      expect(result.{{camel_case this.name}}).toBe(model.{{snake_case this.name}});
      {{/each}}
      */
    });
  });

  {{#if print_markers}}/*__unit_test__*/{{/if}}
});

{{/each}}
{{#if print_markers}}/*__group__*/{{/if}}
