{
  "default": {
    "Endpoint": "{{root}}/endpoints/{{endpoint}}",
    "Ioc": "{{root}}/endpoints/{{endpoint}}/ioc.config.ts",
    "Route": "{{root}}/endpoints/{{endpoint}}/routes/{{name}}.route.ts",
    "Schemas": "{{root}}/endpoints/{{endpoint}}/schemas/{{name}}.schema.json",
    "Entity": "{{root}}/endpoints/{{endpoint}}/domain/entities/{{name}}.ts",
    "EntityUnitTest": "{{root}}/endpoints/{{endpoint}}/domain/entities/__tests__/{{name}}.unit.test.ts",
    "Repository": "{{root}}/endpoints/{{endpoint}}/domain/repositories/{{name}}.repository.ts",
    "Service": "{{root}}/endpoints/{{endpoint}}/domain/services/{{name}}.service.ts",
    "Model": "{{root}}/endpoints/{{endpoint}}/data/dtos/{{name}}.dto.ts",
    "QueryBuilder": "{{root}}/endpoints/{{endpoint}}/domain/models/{{name}}.query-builder.ts",
    "QueryBuilderUnitTest": "{{root}}/endpoints/{{endpoint}}/domain/models/{{name}}.query-builder.unit.test.ts",
    "Input": "{{root}}/endpoints/{{endpoint}}/domain/models/{{name}}.input.ts",
    "InputUnitTest": "{{root}}/endpoints/{{endpoint}}/domain/models/{{name}}.input.unit.test.ts",
    "Output": "{{root}}/endpoints/{{endpoint}}/domain/models/{{name}}.output.ts",
    "OutputUnitTest": "{{root}}/endpoints/{{endpoint}}/domain/models/{{name}}.output.unit.test.ts",
    "Controller": "{{root}}/endpoints/{{endpoint}}/domain/{{name}}.controller.ts",
    "ControllerUnitTest": "{{root}}/endpoints/{{endpoint}}/domain/{{name}}.controller.unit.test.ts",
    "Enums": "{{root}}/endpoints/{{endpoint}}/domain/{{name}}.enums.ts",
    "UseCase": "{{root}}/endpoints/{{endpoint}}/domain/use-cases/{{name}}.use-case.ts",
    "UseCaseUnitTest": "{{root}}/endpoints/{{endpoint}}/domain/use-cases/{{name}}.use-case.unit.test.ts",
    "Utils": "{{root}}/endpoints/{{endpoint}}/domain/{{name}}.utils.ts",
    "UtilsUnitTest": "{{root}}/endpoints/{{endpoint}}/domain/{{name}}.utils.unit.test.ts",
    "DataSource": "{{root}}/endpoints/{{endpoint}}/data/data-sources/{{name}}.{{database}}.data-source.ts",
    "DataSourceUnitTest": "{{root}}/endpoints/{{endpoint}}/data/data-sources/{{name}}.{{database}}.data-source.unit.test.ts",
    "RepositoryImpl": "{{root}}/endpoints/{{endpoint}}/data/repositories/{{name}}.repository-impl.ts",
    "RepositoryImplUnitTest": "{{root}}/endpoints/{{endpoint}}/data/repositories/{{name}}.repository-impl.unit.test.ts",
    "ServiceImplUnitTest": "{{root}}/endpoints/{{endpoint}}/data/services/{{name}}.service-impl.unit.test.ts",
    "Mapper": "{{root}}/endpoints/{{endpoint}}/data/mappers/{{name}}.{{database}}.mapper.ts"
  },
  "grouped": {
    "Endpoint": "{{root}}/endpoints/{{endpoint}}",
    "Ioc": "{{root}}/endpoints/{{endpoint}}/ioc.config.ts",
    "Route": "{{root}}/endpoints/{{endpoint}}/routes/{{name}}.route.ts",
    "Schemas": "{{root}}/endpoints/{{endpoint}}/schemas/{{name}}.schema.json",
    "Entity": "{{root}}/endpoints/{{endpoint}}/entities/{{name}}.ts",
    "EntityUnitTest": "{{root}}/endpoints/{{endpoint}}/entities/{{name}}.unit.test.ts",
    "Repository": "{{root}}/endpoints/{{endpoint}}/repositories/{{name}}.repository.ts#abstract",
    "RepositoryImpl": "{{root}}/endpoints/{{endpoint}}/repositories/{{name}}.repository.ts#impl",
    "RepositoryImplUnitTest": "{{root}}/endpoints/{{endpoint}}/repositories/{{name}}.repository.unit.test.ts#test",
    "Service": "{{root}}/endpoints/{{endpoint}}/services/{{name}}.service.ts#abstract",
    "ServiceImpl": "{{root}}/endpoints/{{endpoint}}/services/{{name}}.service.ts#impl",
    "ServiceImplUnitTest": "{{root}}/endpoints/{{endpoint}}/services/{{name}}.service.unit.test.ts#test",
    "UseCase": "{{root}}/endpoints/{{endpoint}}/use-cases/{{name}}.use-case.ts",
    "UseCaseUnitTest": "{{root}}/endpoints/{{endpoint}}/use-cases/{{name}}.use-case.unit.test.ts",
    "Model": "{{root}}/endpoints/{{endpoint}}/dtos/{{name}}.dto.ts",
    "QueryBuilder": "{{root}}/endpoints/{{endpoint}}/query-builders/{{name}}.query-builder.ts",
    "QueryBuilderUnitTest": "{{root}}/endpoints/{{endpoint}}/query-builders/{{name}}.query-builder.unit.test.ts",
    "Input": "{{root}}/endpoints/{{endpoint}}/models/{{name}}.input.ts",
    "InputUnitTest": "{{root}}/endpoints/{{endpoint}}/models/{{name}}.input.unit.test.ts",
    "Output": "{{root}}/endpoints/{{endpoint}}/models/{{name}}.output.ts",
    "OutputUnitTest": "{{root}}/endpoints/{{endpoint}}/models/{{name}}.output.unit.test.ts",
    "Controller": "{{root}}/endpoints/{{endpoint}}/{{name}}.controller.ts",
    "ControllerUnitTest": "{{root}}/endpoints/{{endpoint}}/{{name}}.controller.unit.test.ts",
    "Enums": "{{root}}/endpoints/{{endpoint}}/enums.ts#enum",
    "Utils": "{{root}}/endpoints/{{endpoint}}/utils.ts#util",
    "UtilsUnitTest": "{{root}}/endpoints/{{endpoint}}/utils.unit.test.ts#test",
    "DataSource": "{{root}}/endpoints/{{endpoint}}/data-sources/{{name}}.{{database}}.data-source.ts",
    "DataSourceUnitTest": "{{root}}/endpoints/{{endpoint}}/data-sources/{{name}}.{{database}}.data-source.unit.test.ts",
    "Mapper": "{{root}}/endpoints/{{endpoint}}/mappers/{{name}}.{{database}}.mapper.ts",
    "MapperUnitTest": "{{root}}/endpoints/{{endpoint}}/mappers/{{name}}.{{database}}.mapper.unit.test.ts"
  },
  "minimal": {
    "Endpoint": "{{root}}/endpoints/{{endpoint}}",
    "Ioc": "{{root}}/endpoints/{{endpoint}}/ioc.config.ts",
    "Route": "{{root}}/endpoints/{{endpoint}}/routes.ts#route",
    "Schemas": "{{root}}/endpoints/{{endpoint}}/schemas/{{name}}.schema.json",
    "Entity": "{{root}}/endpoints/{{endpoint}}/entities.ts#entity",
    "EntityUnitTest": "{{root}}/endpoints/{{endpoint}}/entities.unit.test.ts#test",
    "Repository": "{{root}}/endpoints/{{endpoint}}/repositories.ts#abstract",
    "RepositoryImpl": "{{root}}/endpoints/{{endpoint}}/repositories.ts#impl",
    "RepositoryImplUnitTest": "{{root}}/endpoints/{{endpoint}}/repositories.unit.test.ts#test",
    "Service": "{{root}}/endpoints/{{endpoint}}/services.ts#abstract",
    "ServiceImpl": "{{root}}/endpoints/{{endpoint}}/services.ts#impl",
    "ServiceImplUnitTest": "{{root}}/endpoints/{{endpoint}}/services.unit.test.ts#test",
    "UseCase": "{{root}}/endpoints/{{endpoint}}/use-cases.ts#use-case",
    "UseCaseUnitTest": "{{root}}/endpoints/{{endpoint}}/use-cases.unit.test.ts#test",
    "Model": "{{root}}/endpoints/{{endpoint}}/dtos.ts#model",
    "QueryBuilder": "{{root}}/endpoints/{{endpoint}}/query-builders.ts#query-builder",
    "QueryBuilderUnitTest": "{{root}}/endpoints/{{endpoint}}/query-builders.unit.test.ts#test",
    "Input": "{{root}}/endpoints/{{endpoint}}/models.ts#model",
    "InputUnitTest": "{{root}}/endpoints/{{endpoint}}/models.unit.test.ts#test",
    "Output": "{{root}}/endpoints/{{endpoint}}/models.ts#model",
    "OutputUnitTest": "{{root}}/endpoints/{{endpoint}}/models.unit.test.ts#test",
    "Controller": "{{root}}/endpoints/{{endpoint}}/controller.ts",
    "ControllerUnitTest": "{{root}}/endpoints/{{endpoint}}/controller.unit.test.ts",
    "Enums": "{{root}}/endpoints/{{endpoint}}/enums.ts#enum",
    "Utils": "{{root}}/endpoints/{{endpoint}}/utils.ts#util",
    "UtilsUnitTest": "{{root}}/endpoints/{{endpoint}}/utils.unit.test.ts#test",
    "DataSource": "{{root}}/endpoints/{{endpoint}}/data-sources.ts#data-source",
    "DataSourceUnitTest": "{{root}}/endpoints/{{endpoint}}/data-sources.unit.test.ts#test",
    "Mapper": "{{root}}/endpoints/{{endpoint}}/mappers.ts#mapper",
    "MapperUnitTest": "{{root}}/endpoints/{{endpoint}}/mappers.unit.test.ts#test"
  }
}